{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Atomic Architecture offers practical capabilities to manage the complexity of modern apps. It effectively integrates the solution for both state management and dependency injection while allowing us to rapidly building an application."}]},{"anchor":"Source-Code","level":2,"type":"heading","text":"Source Code"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-atomic-architecture"}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A declarative state management and dependency injection library for SwiftUI x Concurrency."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Atoms","title":"Atoms","symbolKind":"module","role":"collection","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Atoms","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"]},{"title":"Modifiers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/select(_:)","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/phase"]},{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive"]},{"title":"Property Wrappers","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Watch","doc:\/\/Atoms\/documentation\/Atoms\/WatchState","doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","doc:\/\/Atoms\/documentation\/Atoms\/ViewContext"]},{"title":"Contexts","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomRelationContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext"]},{"title":"Views","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","doc:\/\/Atoms\/documentation\/Atoms\/AtomRelay","doc:\/\/Atoms\/documentation\/Atoms\/Suspense"]},{"title":"Values","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"]},{"title":"Debugging","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AtomObserver","doc:\/\/Atoms\/documentation\/Atoms\/AtomHistory","doc:\/\/Atoms\/documentation\/Atoms\/Snapshot"]},{"title":"Internal System","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomStateHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomTaskHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshableHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomHookContext","doc:\/\/Atoms\/documentation\/Atoms\/ValueHook","doc:\/\/Atoms\/documentation\/Atoms\/StateHook","doc:\/\/Atoms\/documentation\/Atoms\/TaskHook","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskHook","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceHook","doc:\/\/Atoms\/documentation\/Atoms\/PublisherHook","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectHook","doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierHook","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierHook"]}],"references":{"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"A declarative state management and dependency injection library for SwiftUI x Concurrency."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"role":"symbol","title":"AsyncSequenceAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom"},"doc://Atoms/documentation/Atoms/ViewContext":{"role":"symbol","title":"ViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewContext"}],"abstract":[{"type":"text","text":"A property wrapper type that provides a context structure that to read, watch, and otherwise"},{"type":"text","text":" "},{"type":"text","text":"interacting with atoms from views."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ViewContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewContext"}],"url":"\/documentation\/atoms\/viewcontext"},"doc://Atoms/documentation/Atoms/Atom/phase":{"conformance":{"constraints":[{"type":"codeVoice","code":"Hook"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomTaskHook"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"phase","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"phase"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPhaseModifierAtom","preciseIdentifier":"s:5Atoms21TaskPhaseModifierAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Converts the "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" that the original atom provides into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/phase","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atom\/phase"},"doc://Atoms/documentation/Atoms/AtomTaskHook":{"role":"symbol","title":"AtomTaskHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTaskHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of atoms which provide "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTaskHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomTaskHook"}],"url":"\/documentation\/atoms\/atomtaskhook"},"doc://Atoms/documentation/Atoms/AtomHookContext":{"role":"symbol","title":"AtomHookContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomHookContext"}],"abstract":[{"type":"text","text":"Internal use, a context structure that to interact with internal store."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomHookContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomHookContext"}],"url":"\/documentation\/atoms\/atomhookcontext"},"doc://Atoms/documentation/Atoms/ThrowingTaskHook":{"role":"symbol","title":"ThrowingTaskHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskHook"}],"url":"\/documentation\/atoms\/throwingtaskhook"},"https://github.com/ra1028/swiftui-atomic-architecture":{"title":"https:\/\/github.com\/ra1028\/swiftui-atomic-architecture","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/ra1028\/swiftui-atomic-architecture"}],"type":"link","identifier":"https:\/\/github.com\/ra1028\/swiftui-atomic-architecture","url":"https:\/\/github.com\/ra1028\/swiftui-atomic-architecture"},"doc://Atoms/documentation/Atoms/AtomTestContext":{"role":"symbol","title":"AtomTestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTestContext"}],"abstract":[{"type":"text","text":"A context structure that to read, watch, and otherwise interacting with atoms in testing."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTestContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomTestContext"}],"url":"\/documentation\/atoms\/atomtestcontext"},"doc://Atoms/documentation/Atoms/StateAtom":{"role":"symbol","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom"},"doc://Atoms/documentation/Atoms/AtomHook":{"role":"symbol","title":"AtomHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomHook"}],"url":"\/documentation\/atoms\/atomhook"},"doc://Atoms/documentation/Atoms/StateHook":{"role":"symbol","title":"StateHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateHook"}],"url":"\/documentation\/atoms\/statehook"},"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"role":"symbol","title":"AtomViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"type":"text","text":"A context structure that to read, watch, and otherwise interacting with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/AtomRefreshableHook":{"role":"symbol","title":"AtomRefreshableHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRefreshableHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of refreshable, asynchronous atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshableHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshableHook"}],"url":"\/documentation\/atoms\/atomrefreshablehook"},"doc://Atoms/documentation/Atoms/Watch":{"role":"symbol","title":"Watch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Watch"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-only access to the given atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Watch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Watch"}],"url":"\/documentation\/atoms\/watch"},"doc://Atoms/documentation/Atoms/SelectModifierHook":{"role":"symbol","title":"SelectModifierHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SelectModifierHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SelectModifierHook"}],"url":"\/documentation\/atoms\/selectmodifierhook"},"doc://Atoms/documentation/Atoms/Suspense":{"role":"symbol","title":"Suspense","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Suspense"}],"abstract":[{"type":"text","text":"A view that lets the content wait for the given task to provide a resulting value"},{"type":"text","text":" "},{"type":"text","text":"or an error."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Suspense","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Suspense"}],"url":"\/documentation\/atoms\/suspense"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"role":"symbol","title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"url":"\/documentation\/atoms\/observableobjectatom"},"doc://Atoms/documentation/Atoms/AtomRelationContext":{"role":"symbol","title":"AtomRelationContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRelationContext"}],"abstract":[{"type":"text","text":"A context structure that to read, watch, and otherwise interacting with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRelationContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRelationContext"}],"url":"\/documentation\/atoms\/atomrelationcontext"},"doc://Atoms/documentation/Atoms/AsyncSequenceHook":{"role":"symbol","title":"AsyncSequenceHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceHook"}],"url":"\/documentation\/atoms\/asyncsequencehook"},"doc://Atoms/documentation/Atoms/WatchState":{"role":"symbol","title":"WatchState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchState"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch and read-write access to the given atom conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WatchState"}],"url":"\/documentation\/atoms\/watchstate"},"doc://Atoms/documentation/Atoms/AtomHistory":{"role":"symbol","title":"AtomHistory","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomHistory"}],"abstract":[{"type":"text","text":"A protocol that abstracts restorable change history of an atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomHistory","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomHistory"}],"url":"\/documentation\/atoms\/atomhistory"},"doc://Atoms/documentation/Atoms/AtomStateHook":{"role":"symbol","title":"AtomStateHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStateHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of read-write atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStateHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStateHook"}],"url":"\/documentation\/atoms\/atomstatehook"},"doc://Atoms/documentation/Atoms/AtomRoot":{"role":"symbol","title":"AtomRoot","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRoot"}],"abstract":[{"type":"text","text":"A view that stores the state container of atoms and provides an internal store to view-tree"},{"type":"text","text":" "},{"type":"text","text":"through environment values."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRoot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRoot"}],"url":"\/documentation\/atoms\/atomroot"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"role":"symbol","title":"AsyncPhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase"},"doc://Atoms/documentation/Atoms/ValueAtom":{"role":"symbol","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"url":"\/documentation\/atoms\/valueatom"},"doc://Atoms/documentation/Atoms/Snapshot":{"role":"symbol","title":"Snapshot","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"abstract":[{"type":"text","text":"A snapshot that contains the changed atom and its value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Snapshot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"url":"\/documentation\/atoms\/snapshot"},"doc://Atoms/documentation/Atoms/WatchStateObject":{"role":"symbol","title":"WatchStateObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WatchStateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that can watch the given atom conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WatchStateObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WatchStateObject"}],"url":"\/documentation\/atoms\/watchstateobject"},"doc://Atoms/documentation/Atoms/PublisherHook":{"role":"symbol","title":"PublisherHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherHook"}],"url":"\/documentation\/atoms\/publisherhook"},"doc://Atoms/documentation/Atoms/AtomContext":{"role":"symbol","title":"AtomContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomContext"}],"abstract":[{"type":"text","text":"A context structure that to read, write, and otherwise interacting with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomContext"}],"url":"\/documentation\/atoms\/atomcontext"},"doc://Atoms/documentation/Atoms/Atom/select(_:)":{"role":"symbol","title":"select(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"select"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SelectModifierAtom","preciseIdentifier":"s:5Atoms18SelectModifierAtomV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Selects a partial property with the specified key path from the original atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/select(_:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atom\/select(_:)"},"doc://Atoms/documentation/Atoms/ValueHook":{"role":"symbol","title":"ValueHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueHook"}],"url":"\/documentation\/atoms\/valuehook"},"doc://Atoms/documentation/Atoms/SelectModifierAtom":{"role":"symbol","title":"SelectModifierAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SelectModifierAtom"}],"abstract":[{"type":"text","text":"An atom that selects the partial value of the specified key path from the original atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SelectModifierAtom"}],"url":"\/documentation\/atoms\/selectmodifieratom"},"doc://Atoms/documentation/Atoms/AtomRelay":{"role":"symbol","title":"AtomRelay","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRelay"}],"abstract":[{"type":"text","text":"A view that relays an internal store from the passed view context or from environment values."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRelay","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRelay"}],"url":"\/documentation\/atoms\/atomrelay"},"doc://Atoms/documentation/Atoms/TaskHook":{"role":"symbol","title":"TaskHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskHook"}],"url":"\/documentation\/atoms\/taskhook"},"doc://Atoms/documentation/Atoms/ObservableObjectHook":{"role":"symbol","title":"ObservableObjectHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectHook"}],"url":"\/documentation\/atoms\/observableobjecthook"},"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","title":"KeepAlive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"abstract":[{"type":"text","text":"A marker protocol that indicates that the value of atoms conform with this protocol"},{"type":"text","text":" "},{"type":"text","text":"will continue to be retained even after they are no longer watched to."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"role":"symbol","title":"ThrowingTaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/AtomObserver":{"role":"symbol","title":"AtomObserver","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomObserver"}],"abstract":[{"type":"text","text":"An interface you implement to observe changes in atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomObserver","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomObserver"}],"url":"\/documentation\/atoms\/atomobserver"},"doc://Atoms/documentation/Atoms/AtomWatchableContext":{"role":"symbol","title":"AtomWatchableContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomWatchableContext"}],"abstract":[{"type":"text","text":"A context structure that to read, watch, and otherwise interacting with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomWatchableContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomWatchableContext"}],"url":"\/documentation\/atoms\/atomwatchablecontext"},"doc://Atoms/documentation/Atoms/TaskPhaseModifierHook":{"role":"symbol","title":"TaskPhaseModifierHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifierHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifierHook"}],"url":"\/documentation\/atoms\/taskphasemodifierhook"},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom"},"doc://Atoms/documentation/Atoms/TaskPhaseModifierAtom":{"role":"symbol","title":"TaskPhaseModifierAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifierAtom"}],"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifierAtom"}],"url":"\/documentation\/atoms\/taskphasemodifieratom"}}}