{"seeAlsoSections":[{"title":"Internal System","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierAtom","doc:\/\/Atoms\/documentation\/Atoms\/AtomHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomStateHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomTaskHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshableHook","doc:\/\/Atoms\/documentation\/Atoms\/AtomHookContext","doc:\/\/Atoms\/documentation\/Atoms\/ValueHook","doc:\/\/Atoms\/documentation\/Atoms\/StateHook","doc:\/\/Atoms\/documentation\/Atoms\/TaskHook","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskHook","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceHook","doc:\/\/Atoms\/documentation\/Atoms\/PublisherHook","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectHook","doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierHook","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierHook"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"title":"Atom","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Atoms4AtomP","modules":[{"name":"Atoms"}],"navigatorTitle":[{"kind":"identifier","text":"Atom"}]},"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierAtom","doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierAtom"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Hook-swift.associatedtype","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Key-swift.associatedtype"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/hook-swift.property","doc:\/\/Atoms\/documentation\/Atoms\/Atom\/key-swift.property-8ipu8"]},{"title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/shouldNotifyUpdate(newValue:oldValue:)-8c301"]},{"title":"Type Aliases","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context"]},{"title":"Type Properties","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom\/shouldKeepAlive-91vg3"]}],"variants":[{"paths":["\/documentation\/atoms\/atom"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In summary, this protocol declares a hook that determines the behavioral details"},{"type":"text","text":" "},{"type":"text","text":"of this atom and a key determines the value uniqueness."},{"type":"text","text":" "},{"type":"text","text":"The value produced by an atom is created only when the atom is watched from somewhere,"},{"type":"text","text":" "},{"type":"text","text":"and is immediately released when no longer watched to."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the atom value needs to be preserved even if no longer watched to, you can consider"},{"type":"text","text":" "},{"type":"text","text":"conform the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive"},{"type":"text","text":" protocol to the atom."}]}]}],"references":{"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","title":"KeepAlive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"abstract":[{"type":"text","text":"A marker protocol that indicates that the value of atoms conform with this protocol"},{"type":"text","text":" "},{"type":"text","text":"will continue to be retained even after they are no longer watched to."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive"},"doc://Atoms/documentation/Atoms/AtomTaskHook":{"role":"symbol","title":"AtomTaskHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomTaskHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of atoms which provide "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomTaskHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomTaskHook"}],"url":"\/documentation\/atoms\/atomtaskhook"},"doc://Atoms/documentation/Atoms/SelectModifierAtom":{"role":"symbol","title":"SelectModifierAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SelectModifierAtom"}],"abstract":[{"type":"text","text":"An atom that selects the partial value of the specified key path from the original atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SelectModifierAtom"}],"url":"\/documentation\/atoms\/selectmodifieratom"},"doc://Atoms/documentation/Atoms/ValueAtom":{"role":"symbol","title":"ValueAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-only value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueAtom"}],"url":"\/documentation\/atoms\/valueatom"},"doc://Atoms/documentation/Atoms/PublisherHook":{"role":"symbol","title":"PublisherHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherHook"}],"url":"\/documentation\/atoms\/publisherhook"},"doc://Atoms/documentation/Atoms/Atom/key-swift.property-8ipu8":{"defaultImplementations":1,"role":"symbol","title":"key","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key"}],"abstract":[{"type":"text","text":"A unique value used to identify the atom internally."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/key-swift.property-8ipu8","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/atom\/key-swift.property-8ipu8"},"doc://Atoms/documentation/Atoms/AsyncPhase":{"role":"symbol","title":"AsyncPhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncPhase"}],"abstract":[{"type":"text","text":"A value that represents a success, a failure, or a state in which the result of"},{"type":"text","text":" "},{"type":"text","text":"asynchronous process has not yet been determined."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncPhase"}],"url":"\/documentation\/atoms\/asyncphase"},"doc://Atoms/documentation/Atoms/TaskPhaseModifierAtom":{"role":"symbol","title":"TaskPhaseModifierAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifierAtom"}],"abstract":[{"type":"text","text":"An atom that provides a sequential value of the base atom as an enum"},{"type":"text","text":" "},{"type":"text","text":"representation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" that changes overtime."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifierAtom"}],"url":"\/documentation\/atoms\/taskphasemodifieratom"},"doc://Atoms/documentation/Atoms/TaskAtom":{"role":"symbol","title":"TaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a nonthrowing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskAtom"}],"url":"\/documentation\/atoms\/taskatom"},"doc://Atoms/documentation/Atoms/StateHook":{"role":"symbol","title":"StateHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateHook"}],"url":"\/documentation\/atoms\/statehook"},"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/ObservableObjectHook":{"role":"symbol","title":"ObservableObjectHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectHook"}],"url":"\/documentation\/atoms\/observableobjecthook"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a sequence of values of the given "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/Atom/Hook-swift.associatedtype":{"role":"symbol","title":"Hook","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hook"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AtomHook","preciseIdentifier":"s:5Atoms8AtomHookP"}],"abstract":[{"type":"text","text":"A type of the hook that determines behavioral details."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Hook-swift.associatedtype","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/atom\/hook-swift.associatedtype"},"doc://Atoms/documentation/Atoms/Atom/hook-swift.property":{"defaultImplementations":7,"role":"symbol","title":"hook","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hook"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"}],"abstract":[{"type":"text","text":"Internal use, the hook for managing the state of this atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/hook-swift.property","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/atom\/hook-swift.property"},"doc://Atoms/documentation/Atoms/ValueHook":{"role":"symbol","title":"ValueHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ValueHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueHook"}],"url":"\/documentation\/atoms\/valuehook"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"role":"symbol","title":"AsyncSequenceAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"An atom type that provides asynchronous, sequential elements of the given "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"as an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncPhase"},{"type":"text","text":" value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom"},"doc://Atoms/documentation/Atoms/AsyncSequenceHook":{"role":"symbol","title":"AsyncSequenceHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceHook"}],"url":"\/documentation\/atoms\/asyncsequencehook"},"doc://Atoms/documentation/Atoms/AtomStateHook":{"role":"symbol","title":"AtomStateHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStateHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of read-write atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStateHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStateHook"}],"url":"\/documentation\/atoms\/atomstatehook"},"doc://Atoms/documentation/Atoms/AtomHookContext":{"role":"symbol","title":"AtomHookContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomHookContext"}],"abstract":[{"type":"text","text":"Internal use, a context structure that to interact with internal store."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomHookContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomHookContext"}],"url":"\/documentation\/atoms\/atomhookcontext"},"doc://Atoms/documentation/Atoms/ThrowingTaskHook":{"role":"symbol","title":"ThrowingTaskHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskHook"}],"url":"\/documentation\/atoms\/throwingtaskhook"},"doc://Atoms/documentation/Atoms/AtomRefreshableHook":{"role":"symbol","title":"AtomRefreshableHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomRefreshableHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of refreshable, asynchronous atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomRefreshableHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomRefreshableHook"}],"url":"\/documentation\/atoms\/atomrefreshablehook"},"doc://Atoms/documentation/Atoms/SelectModifierHook":{"role":"symbol","title":"SelectModifierHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SelectModifierHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/SelectModifierHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SelectModifierHook"}],"url":"\/documentation\/atoms\/selectmodifierhook"},"doc://Atoms/documentation/Atoms/Atom/shouldKeepAlive-91vg3":{"defaultImplementations":2,"role":"symbol","title":"shouldKeepAlive","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldKeepAlive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"A boolean value indicating whether the atom value should be preserved even if"},{"type":"text","text":" "},{"type":"text","text":"no longer watched to."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/shouldKeepAlive-91vg3","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/atom\/shouldkeepalive-91vg3"},"doc://Atoms/documentation/Atoms/ThrowingTaskAtom":{"role":"symbol","title":"ThrowingTaskAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThrowingTaskAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a throwing "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" from the given asynchronous, throwing function."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ThrowingTaskAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThrowingTaskAtom"}],"url":"\/documentation\/atoms\/throwingtaskatom"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"A declarative state management and dependency injection library for SwiftUI x Concurrency."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/StateAtom":{"role":"symbol","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom"},"doc://Atoms/documentation/Atoms/Atom/Context":{"role":"symbol","title":"Atom.Context","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"A type of the context structure that to read, watch, and otherwise interacting"},{"type":"text","text":" "},{"type":"text","text":"with other atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Context","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/atoms\/atom\/context"},"doc://Atoms/documentation/Atoms/AtomHook":{"role":"symbol","title":"AtomHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomHook"}],"url":"\/documentation\/atoms\/atomhook"},"doc://Atoms/documentation/Atoms/Atom/Key-swift.associatedtype":{"role":"symbol","title":"Key","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Key"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}],"abstract":[{"type":"text","text":"A type representing the stable identity of this atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/Key-swift.associatedtype","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/atom\/key-swift.associatedtype"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"role":"symbol","title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"type":"text","text":"An atom type that instantiates an observable object."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"url":"\/documentation\/atoms\/observableobjectatom"},"doc://Atoms/documentation/Atoms/Atom/shouldNotifyUpdate(newValue:oldValue:)-8c301":{"defaultImplementations":1,"role":"symbol","title":"shouldNotifyUpdate(newValue:oldValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldNotifyUpdate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"newValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"oldValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a boolean value that determines whether it should notify the value update to"},{"type":"text","text":" "},{"type":"text","text":"watchers with comparing the given old value and the new value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom\/shouldNotifyUpdate(newValue:oldValue:)-8c301","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/atom\/shouldnotifyupdate(newvalue:oldvalue:)-8c301"},"doc://Atoms/documentation/Atoms/TaskHook":{"role":"symbol","title":"TaskHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskHook"}],"url":"\/documentation\/atoms\/taskhook"},"doc://Atoms/documentation/Atoms/TaskPhaseModifierHook":{"role":"symbol","title":"TaskPhaseModifierHook","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskPhaseModifierHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of corresponding atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TaskPhaseModifierHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskPhaseModifierHook"}],"url":"\/documentation\/atoms\/taskphasemodifierhook"}}}