{"seeAlsoSections":[{"title":"Attributes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"title":"Refreshable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Atoms11RefreshableP","modules":[{"name":"Atoms"}],"navigatorTitle":[{"kind":"identifier","text":"Refreshable"}]},"abstract":[{"type":"text","text":"An attribute protocol allows an atom to have a custom refresh ability."}],"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Atom"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/RefreshContext"]}],"variants":[{"paths":["\/documentation\/atoms\/refreshable"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the custom refresh ability is not triggered when the atom is overridden."}]},{"type":"codeListing","syntax":"swift","code":["struct RandomIntAtom: ValueAtom, Refreshable, Hashable {","    func value(context: Context) -> Int {","        0","    }","","    func refresh(context: RefreshContext) async -> Int {","        try? await Task.sleep(nanoseconds: 3 * 1_000_000_000)","        return .random(in: 0..<100)","    }","}"]}]}],"references":{"doc://Atoms/documentation/Atoms/KeepAlive":{"role":"symbol","title":"KeepAlive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeepAlive"}],"abstract":[{"type":"text","text":"An attribute protocol to allow the value of an atom to continue being retained"},{"type":"text","text":" "},{"type":"text","text":"even after they are no longer watched to."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/KeepAlive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeepAlive"}],"url":"\/documentation\/atoms\/keepalive"},"doc://Atoms/documentation/Atoms/Refreshable/refresh(context:)":{"role":"symbol","title":"refresh(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RefreshContext","preciseIdentifier":"s:5Atoms11RefreshableP14RefreshContexta"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Loader"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Refreshes and then return a result value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/refresh(context:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/atoms\/refreshable\/refresh(context:)"},"doc://Atoms/documentation/Atoms/Refreshable":{"role":"symbol","title":"Refreshable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Refreshable"}],"abstract":[{"type":"text","text":"An attribute protocol allows an atom to have a custom refresh ability."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Refreshable"}],"url":"\/documentation\/atoms\/refreshable"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"Atomic approach state management and dependency injection for SwiftUI"}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/Refreshable/RefreshContext":{"role":"symbol","title":"Refreshable.RefreshContext","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefreshContext"}],"abstract":[{"type":"text","text":"A type of the context structure that to read, set, and otherwise interacting"},{"type":"text","text":" "},{"type":"text","text":"with other atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Refreshable\/RefreshContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefreshContext"}],"url":"\/documentation\/atoms\/refreshable\/refreshcontext"}}}