{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"atom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","preciseIdentifier":"s:5Atoms4AtomP","text":"Atom"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStateHook","preciseIdentifier":"s:5Atoms13AtomStateHookP","text":"AtomStateHook"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value associated with the given atom."}]}]},{"kind":"parameters","parameters":[{"name":"atom","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An atom that associates the value."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method only accepts read-write atoms such as types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and returns a binding that accesses the value or assign a new value for the atom."},{"type":"text","text":" "},{"type":"text","text":"When you set a new value to the "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" property of the binding, it assigns the value"},{"type":"text","text":" "},{"type":"text","text":"to the atom, and then notifies update immediately to downstream atoms or views."},{"type":"text","text":" "},{"type":"text","text":"Note that the binding initiates wathing the given atom when you get a value through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" property."}]},{"type":"codeListing","syntax":"swift","code":["let context = ...","let binding = context.state(TextAtom())","binding.wrappedValue = \"New text\"","binding.wrappedValue.append(\" is mutated!\")","print(binding.wrappedValue) \/\/ Prints \"New text is mutated!\""]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atoms\/atomviewcontext\/state(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/state(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" that accesses the value associated with the given read-write atom."}],"kind":"symbol","metadata":{"role":"symbol","title":"state(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:5Atoms20AtomWatchableContextPAAE5statey7SwiftUI7BindingVy4Hook_5ValueQYd__Gqd__AA0B0Rd__AA0b5StateI0AHRpd__lF::SYNTHESIZED::s:5Atoms15AtomViewContextV","extendedModule":"Atoms","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[["doc:\/\/Atoms\/documentation\/Atoms","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/AtomWatchableContext-Implementations"]]},"references":{"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"Declares that a type can produce a value that can be accessed from everywhere."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[{"type":"text","text":"A declarative state management and dependency injection library for SwiftUI x Concurrency."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AtomViewContext/state(_:)":{"role":"symbol","title":"state(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Node"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Node"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Hook"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" that accesses the value associated with the given read-write atom."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/state(_:)","kind":"symbol","type":"topic","url":"\/documentation\/atoms\/atomviewcontext\/state(_:)"},"doc://Atoms/documentation/Atoms/AtomViewContext":{"role":"symbol","title":"AtomViewContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomViewContext"}],"abstract":[{"type":"text","text":"A context structure that to read, watch, and otherwise interacting with atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomViewContext"}],"url":"\/documentation\/atoms\/atomviewcontext"},"doc://Atoms/documentation/Atoms/StateAtom":{"role":"symbol","title":"StateAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAtom"}],"abstract":[{"type":"text","text":"An atom type that provides a read-write state value."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/StateAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateAtom"}],"url":"\/documentation\/atoms\/stateatom"},"doc://Atoms/documentation/Atoms/AtomStateHook":{"role":"symbol","title":"AtomStateHook","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStateHook"}],"abstract":[{"type":"text","text":"Internal use, a hook type that determines behavioral details of read-write atoms."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStateHook","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStateHook"}],"url":"\/documentation\/atoms\/atomstatehook"},"doc://Atoms/documentation/Atoms/AtomViewContext/AtomWatchableContext-Implementations":{"role":"collectionGroup","title":"AtomWatchableContext Implementations","abstract":[],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomViewContext\/AtomWatchableContext-Implementations","kind":"article","type":"topic","url":"\/documentation\/atoms\/atomviewcontext\/atomwatchablecontext-implementations"}}}